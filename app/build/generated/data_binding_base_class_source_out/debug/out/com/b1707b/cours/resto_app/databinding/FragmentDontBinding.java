// Generated by view binder compiler. Do not edit!
package com.b1707b.cours.resto_app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.b1707b.cours.resto_app.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDontBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button fdBtnValider;

  @NonNull
  public final TextInputEditText fdNumCard;

  @NonNull
  public final TextView fdQrLaunch;

  @NonNull
  public final TextView fragmentDetailDateMenu;

  private FragmentDontBinding(@NonNull LinearLayout rootView, @NonNull Button fdBtnValider,
      @NonNull TextInputEditText fdNumCard, @NonNull TextView fdQrLaunch,
      @NonNull TextView fragmentDetailDateMenu) {
    this.rootView = rootView;
    this.fdBtnValider = fdBtnValider;
    this.fdNumCard = fdNumCard;
    this.fdQrLaunch = fdQrLaunch;
    this.fragmentDetailDateMenu = fragmentDetailDateMenu;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDontBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDontBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dont, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDontBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fdBtnValider;
      Button fdBtnValider = ViewBindings.findChildViewById(rootView, id);
      if (fdBtnValider == null) {
        break missingId;
      }

      id = R.id.fdNumCard;
      TextInputEditText fdNumCard = ViewBindings.findChildViewById(rootView, id);
      if (fdNumCard == null) {
        break missingId;
      }

      id = R.id.fdQrLaunch;
      TextView fdQrLaunch = ViewBindings.findChildViewById(rootView, id);
      if (fdQrLaunch == null) {
        break missingId;
      }

      id = R.id.fragment_detail_dateMenu;
      TextView fragmentDetailDateMenu = ViewBindings.findChildViewById(rootView, id);
      if (fragmentDetailDateMenu == null) {
        break missingId;
      }

      return new FragmentDontBinding((LinearLayout) rootView, fdBtnValider, fdNumCard, fdQrLaunch,
          fragmentDetailDateMenu);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

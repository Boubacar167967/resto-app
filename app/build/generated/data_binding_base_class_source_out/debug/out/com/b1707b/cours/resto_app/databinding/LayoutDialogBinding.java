// Generated by view binder compiler. Do not edit!
package com.b1707b.cours.resto_app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.b1707b.cours.resto_app.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutDialogBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextInputLayout amInput;

  @NonNull
  public final AutoCompleteTextView autoComplexe1;

  @NonNull
  public final AutoCompleteTextView autoComplexeDialog;

  @NonNull
  public final Button btnNegative;

  @NonNull
  public final Button btnPositive;

  @NonNull
  public final TextInputLayout ldNbrTickets;

  private LayoutDialogBinding(@NonNull RelativeLayout rootView, @NonNull TextInputLayout amInput,
      @NonNull AutoCompleteTextView autoComplexe1, @NonNull AutoCompleteTextView autoComplexeDialog,
      @NonNull Button btnNegative, @NonNull Button btnPositive,
      @NonNull TextInputLayout ldNbrTickets) {
    this.rootView = rootView;
    this.amInput = amInput;
    this.autoComplexe1 = autoComplexe1;
    this.autoComplexeDialog = autoComplexeDialog;
    this.btnNegative = btnNegative;
    this.btnPositive = btnPositive;
    this.ldNbrTickets = ldNbrTickets;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amInput;
      TextInputLayout amInput = ViewBindings.findChildViewById(rootView, id);
      if (amInput == null) {
        break missingId;
      }

      id = R.id.autoComplexe1;
      AutoCompleteTextView autoComplexe1 = ViewBindings.findChildViewById(rootView, id);
      if (autoComplexe1 == null) {
        break missingId;
      }

      id = R.id.autoComplexeDialog;
      AutoCompleteTextView autoComplexeDialog = ViewBindings.findChildViewById(rootView, id);
      if (autoComplexeDialog == null) {
        break missingId;
      }

      id = R.id.btnNegative;
      Button btnNegative = ViewBindings.findChildViewById(rootView, id);
      if (btnNegative == null) {
        break missingId;
      }

      id = R.id.btnPositive;
      Button btnPositive = ViewBindings.findChildViewById(rootView, id);
      if (btnPositive == null) {
        break missingId;
      }

      id = R.id.ldNbrTickets;
      TextInputLayout ldNbrTickets = ViewBindings.findChildViewById(rootView, id);
      if (ldNbrTickets == null) {
        break missingId;
      }

      return new LayoutDialogBinding((RelativeLayout) rootView, amInput, autoComplexe1,
          autoComplexeDialog, btnNegative, btnPositive, ldNbrTickets);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
